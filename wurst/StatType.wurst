package StatType

import LinkedList
import ErrorHandling

interface DefaultCallback
    function run(unit u) returns real

interface UpdateCallback
    function run(unit u, real stat)

interface ValueToStringCallback
    function run(real stat) returns string

public class StatType
    private static let allTypes = new LinkedList<StatType>

    protected string name

    protected real min = 0
    protected real max = 0
    protected bool minEnabled = false
    protected bool maxEnabled = false

    protected DefaultCallback defaultCallback
    protected UpdateCallback updateCallback

    protected ValueToStringCallback toStringCallback = null

    construct( string name, DefaultCallback setBaseCallback, UpdateCallback updateUnitCallback )
        this.name = name
        this.defaultCallback = setBaseCallback
        this.updateCallback = updateUnitCallback
        allTypes.add(this)
   
    function setMinValue(real value)
        minEnabled = true
        min = value

    function hasMinValue() returns bool
        return minEnabled

    function getMinValue() returns real
        if not minEnabled
            error("Stat type '{0}' has no minimum value.".format(name))
        return REAL_MIN
    
    function setMaxValue(real value)
        maxEnabled = true
        max = value

    function hasMaxValue() returns bool
        return maxEnabled

    function getMaxValue() returns real
        if not maxEnabled
            error("Stat type '{0}' has no maximum value.".format(name))
        return REAL_MAX

    function getUnitDefault(unit u) returns real
        return defaultCallback.run(u)

    function updateUnit(unit u, real stat)
        if( updateCallback != null )
            updateCallback.run(u, stat)
        
    function correctValue(real value) returns real
        var adjustedValue = value
        // Adjust to minimum
        if( minEnabled and value < min )
            adjustedValue = min

        // Adjust to maximum
        if( maxEnabled and value > max )
            adjustedValue = max 
    
        return adjustedValue

    function getName() returns string
        return name

    function valueToString(real value) returns string
        if( toStringCallback == null )
            return value.toString()
        return toStringCallback.run(value)

    function setValueToStringCallback(ValueToStringCallback callback)
        if( toStringCallback != null )
            error("LakesStatSystem: To string callback has already been set.")
        toStringCallback = callback


    static function getAllTypes() returns LinkedList<StatType>
        return allTypes


//================================================================================================================================================================================================
// UNIT TESTING
